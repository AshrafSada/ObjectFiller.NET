{
  "title": "Tynamix.ObjectFiller",
  "version": "1.4.0.8",
  "description": "The Tynamix ObjectFiller.NET fills the properties of your objects with random data. Use it for unittest, prototyping and whereever you need some random testdata. It has a fluent API and is highly customizable. It supports also IEnumerables and Dictionaries and constructors WITH parameters. It is also possible to fill instances and to write private properties.",
  "summary": "The Tynamix ObjectFiller.NET fills the properties of your objects with customized random data. Use it for unittests, prototyping and whereever you need some random testdata.",
  "authors": [ "Roman Köhler", "Hendrik L.", "Christian Harlass", "GothikX" ],
  "tags": [ "objectfiller", "tynamix", "test", "testdata", "prototyp", "prototyping", "unittest", "design", "designviewmodel", "generator", "random", "data", "randomdata", "testing", "poco", "lorem", "ipsum", "fakedata", "fake", "faker" ],
  "projectUrl": "http://objectfiller.net/",
  "iconUrl": "https://raw.githubusercontent.com/gokTyBalD/ObjectFiller.NET/master/logo.png",
  "licenseUrl": "https://github.com/Tynamix/ObjectFiller.NET/blob/master/LICENSE.txt",
  "releaseNotes": "-1.4.0\r\n* Updated to .NET Core so you can use ObjectFiller.NET now in your .NET Core (DNX), Windows (Phone) 8/8.1 Store App and Windows 10 (UWP) environment!\r\n* FillerSetup can now be used for dedicated properties or types\r\n* Bugfixes\r\n\r\n-1.3.9\r\n* Bug fixed when creating types with a copy constructor \r\n\r\n-1.3.8\r\n* Support for Arrays and Nullable Enumerations\r\n* Bugfixes (thx to Hendrik L.)\r\n\r\n-1.3.6\r\n* Added Randomizer<T> class to easy generate data for simple types like int, double, string\r\n* Support for complex standalone CLR types like List<T>\r\n* CityName plugin (Thx to Hendrik L.)\r\n* E-Mail-Address plugin (Thx to Hendrik L.)\r\n* StreetName plugin (Thx to Hendrik L.)\r\n* CountryName plugin\r\n* Code cleanup\r\n* Bugfixes\r\n\r\n-1.3.2\r\n* Bugfixes\r\n\r\n-1.3.1\r\n* Easier usage of static values in the \"Use\" API\r\n* Added missing type mappings\r\n* Some bugfixes and improvements\r\n\r\n-1.3.0\r\n* Circular Reference Detection (thx to GothikX)\r\n* Export the ObjectFiller setup and reuse it somewhere else\r\n* Improved LoremIpsum Plugin (thx to GothikX)\r\n* Many bugfixes and improvements\r\n\r\n-1.2.8\r\n* IgnoreAllUnknownTypes added\r\n* Usage of RandomList-Plugin improved\r\n* IntRange-Plugin handles now also nullable int!\r\n\r\n-1.2.4\r\n* Create multiple instances\r\n* Some bugfixes and improvements\r\n\r\n-1.2.3\r\n* Use enumerables to fill objects (thx to charlass)\r\n* Its now possible to fill enum properties (thx to charlass)\r\n* Implemented SequenceGenerator (thx to charlass)\r\n\r\n-1.2.1\r\n* Complete refactoring of the FluentAPI. Read the documentation on objectfiller.net for more information!\r\n* Properties with private setter are able to write.\r\n* Renamed ObjectFiller to Filler to avoid NameSpace conflicts\r\n* Order properties implemented\r\n* IntRange Plugin implemented\r\n* ...some more improvements and bugfixes\r\n\r\n-1.1.8\r\n* Bugfix in RandomizerForProperty\r\n\r\n-1.1.7\r\n* Implemented a Lorem Ipsum string plugin\r\n\r\n-1.1.6\r\n* new fantastic PatternGenerator-Plugin. Thanks to charlass for this!\r\n* Adjust namespaces from ObjectFiller to Tynamix.ObjectFiller\r\n\r\n-1.1.4\r\n* IgnoreAllOfType added.\r\n* Little changes to the main API\r\n\r\n-1.1.2\r\n* moved to github\r\n\r\n-1.1.0\r\n* Changed the fluent API to make it even easier than before to use.\r\n\r\n-1.0.22\r\n* Bugfix when handling lists\r\n\r\n-1.0.21\r\n* Constructors with parameters are now possible as long as the types of parameters are configured in the ObjectFiller.NET setup!\r\n\r\n-1.0.16\r\n* RandomListItem-Plugin\r\n\r\n-1.0.15\r\n* Major Bugfix\r\n\r\n-1.0.14\r\n* Bugfixes\r\n\r\n-1.0.12\r\n* RealNameListString Plugin\r\n* DoubleMinMax plugin\r\n\r\n-1.0.10\r\n* Its now possible to ignore properties.\r\n* Fluent API documented.\r\n* Better ExceptionMessages\r\n* Bugfixes\r\n\r\n-1.0.6\r\n* Its now possible to setup a randomizer to a specific property!\r\n\r\n-1.0.0\r\n* Initial release",

  "frameworks": {
    "net40": { },
    "net45": { },
    "net35": { },
    "dnx451": { },
    "dotnet": {
      "compilationOptions": { "define": [ "DOTNET" ] },
      "dependencies": {
        "System.Linq": {
          "version": "4.0.0-*",
          "options": "private"
        },
        "System.Linq.Expressions": {
          "version": "4.0.10-*",
          "options": "private"
        },
        "System.Runtime.Extensions": {
          "version": "4.0.10-*",
          "options": "private"
        },
        "System.Collections": {
          "version": "4.0.10-*",
          "options": "private"
        },
        "System.Text.RegularExpressions": {
          "version": "4.0.10-*",
          "options": "private"
        }
      }
    },
    "dotnet5.1": {
      "compilationOptions": { "define": [ "NETCORE45" ] },
      "dependencies": {
        "System.Linq": {
          "version": "4.0.0-*",
          "options": "private"
        },
        "System.Linq.Expressions": {
          "version": "4.0.10-*",
          "options": "private"
        },
        "System.Runtime.Extensions": {
          "version": "4.0.10-*",
          "options": "private"
        },
        "System.Collections": {
          "version": "4.0.10-*",
          "options": "private"
        },
        "System.Text.RegularExpressions": {
          "version": "4.0.10-*",
          "options": "private"
        },
        "System.Diagnostics.Debug": {
          "version": "4.0.10-*",
          "options": "private"
        }
      }

    }
  }
}
